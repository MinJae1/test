
<%@page import="ezenMall.util.Paging"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ page import="java.util.*,ezenMall.*,java.text.SimpleDateFormat"%>
<%@ page import="java.io.*"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<!DOCTYPE html>
<%
	request.setCharacterEncoding("utf-8");
%>

<jsp:useBean id="pdo" class="ezenMall.ProductDO" />
<jsp:useBean id="sdao" class="ezenMall.SaleDAO" />
<jsp:setProperty property="*" name="sdao" />

<jsp:useBean id="memdao" class="ezenMall.MemberDAO" />
<jsp:useBean id="memdo" class="ezenMall.MemberDO" />
<jsp:setProperty property="*" name="memdo" />

<jsp:useBean id="odo" class="ezenMall.OrderDO" />
<jsp:setProperty property="*" name="odo" />

<%!public Integer toInt(String x) {
		int a = 0;
		try {
			a = Integer.parseInt(x);
		} catch (Exception e) {
		}
		return a;
	}%>


<%
	String cPath = request.getContextPath();

	String action = request.getParameter("action");

	SimpleDateFormat dateform = new SimpleDateFormat("yyyy-MM-dd");

	String savePath = request.getServletContext().getRealPath("/img");

	switch (action) {

	case "detail": //상품상세페이지
		int cid5 = Integer.valueOf(request.getParameter("cid"));
		request.setAttribute("cid", cid5);
		int pid = Integer.valueOf(request.getParameter("pid"));
		ProductDO item = sdao.getItem(pid);
		request.setAttribute("item", item);
		request.setAttribute("root", savePath);

		pageContext.forward("../shop/product_detail.jsp");

		break;

	case "getall"://상품목록
		int cat_code = Integer.valueOf(request.getParameter("cc"));
		ArrayList<ProductDO> plist = sdao.getItemList(cat_code);
		request.setAttribute("plist", plist);

		String img_name = sdao.getImgName();

		String path = "D:\\Work Space\\java\\ezenMall\\WebContent\\img";

		File file = new File(path + "\\" + img_name);

		if (!file.isFile()) {

			FileInputStream fis = null;
			FileOutputStream fos = null;

			try {
				fis = new FileInputStream(savePath + "\\" + img_name); // 원본파일
				fos = new FileOutputStream(path + "\\" + img_name); // 복사위치

				byte[] buffer = new byte[1024];
				int readcount = 0;

				while ((readcount = fis.read(buffer)) != -1) {
					fos.write(buffer, 0, readcount); // 파일 복사 

				}
			} catch (Exception e) {
				e.printStackTrace();
			} finally {

				fis.close();
				fos.close();

			}
		}
		//int pageno = Integer.valueOf(request.getParameter("pageno")); 

		int totalPage = 5;
		String pageNo[] = new String[totalPage];
		for(int p=0; p<totalPage; p++) {
			pageNo[p] = Integer.toString(p+1);
		}
		request.setAttribute("pageArray", pageNo);

		pageContext.forward("../shop/shop_main.jsp");

		break;

	case "cart": //장바구니담기
		int cid = Integer.valueOf(request.getParameter("cid"));
		sdao.orderMake(cid);

		int pid2 = Integer.valueOf(request.getParameter("pid"));
		int quantity = Integer.valueOf(request.getParameter("q"));

		int chkQ = sdao.checkCart(pid2);

		if (chkQ != 0) {
			quantity = quantity + chkQ;
			sdao.updateQuantity(pid2, quantity);
		} else {
			ProductDO cartI = new ProductDO();

			cartI.setpId(pid2);
			cartI.setpQuantity(quantity);

			sdao.inCart(cartI);
		}

		pageContext.forward("../control/shop_control.jsp?action=getall&cc=0");
		break;

	case "cartList"://장바구니리스트
		if (request.getParameter("cid").equals("")) {
			out.println("<script>alert('로그인 해주세요!');history.go(-1);</script>");
		} else {
			int cid2 = Integer.valueOf(request.getParameter("cid"));
			ArrayList<OrderDO> cartList = sdao.CartList(cid2);
			request.setAttribute("cartList", cartList);

			pageContext.forward("../shop/cart.jsp");
		}
		break;

	case "delete"://장바구니 상품 삭제

		String o = request.getParameter("oid");
		String[] temp = o.split(",");

		int[] oid_list = new int[temp.length];
		int i = 0;

		while (i < temp.length) {
			oid_list[i] = Integer.valueOf(temp[i]);
			i++;
		}

		for (int val_oid : oid_list) {
			sdao.deleteCart(val_oid);
		}
		//		out.println("<script>alert('삭제되었습니다.')</script>");
		//		pageContext.forward("shop_control.jsp?action=cartList");
		int cid2 = Integer.valueOf(request.getParameter("cid"));

		request.setAttribute("message", "삭제되었습니다.");
		request.setAttribute("returnUrl",
				"shop_control.jsp?action=cartList&cid=" + cid2 + "");
		pageContext.forward("../alertjsp.jsp");

		//out.println("<script>alert('삭제되었습니다.'); document.location.href = '../control/shop_control.jsp?action=cartList'; </script>");

		break;

	case "selOrder"://상품 주문
		String o2 = request.getParameter("oid");
		String[] temp2 = o2.split(",");

		int[] oid_list2 = new int[temp2.length];
		int j = 0;

		while (j < temp2.length) {
			oid_list2[j] = Integer.valueOf(temp2[j]);
			j++;
		}

		for (int val_oid : oid_list2) {
			sdao.update(val_oid, oid_list2[0]);
		}

		for (int val_oid : oid_list2) {
			sdao.updatePrice(val_oid);
		}
		sdao.arrageOrder();
		//pageContext.forward("../control/shop_control.jsp?action=getall");

		request.setAttribute("message", "주문되었습니다.");
		request.setAttribute("returnUrl",
				"../control/shop_control.jsp?action=getall&cc=0");
		pageContext.forward("../alertjsp.jsp");

		break;

	case "orderHis": //주문내역
		if (request.getParameter("cid").equals("")) {
			out.println("<script>alert('로그인 해주세요!');history.go(-1);</script>");
		} else {
			int cid3 = Integer.valueOf(request.getParameter("cid"));
			ArrayList<OrderDO> order = sdao.OrderHistory(cid3);
			request.setAttribute("order", order);

			pageContext.forward("../shop/order.jsp");
		}
		break;

	case "orderdetail"://주문상세페이지
		int oid = Integer.valueOf(request.getParameter("oid"));
		ArrayList<OrderDO> orderDetail = sdao.OrderDetail(oid);
		request.setAttribute("orderDetail", orderDetail);

		pageContext.forward("../shop/order_detail.jsp");
		break;

	case "order"://바로주문
		int cid4 = Integer.valueOf(request.getParameter("cid"));
		sdao.orderMake(cid4);

		int pid3 = Integer.valueOf(request.getParameter("pid"));
		int quantity2 = Integer.valueOf(request.getParameter("q"));

		ProductDO orderI = new ProductDO();

		orderI.setpId(pid3);
		orderI.setpQuantity(quantity2);
		sdao.inCart(orderI);

		int orderNo = sdao.getOrderNm();

		sdao.update(orderNo, orderNo);
		sdao.updatePrice(orderNo);

		pageContext.forward("../control/shop_control.jsp?action=orderHis");
		break;

	default:
		out.println("<script>alert('Check action parameter!!!')</script>");
		break;
	}
%>


<%

public int paging_fn(){
	int pageno = toInt(request.getParameter("pageno"));
	if(pageno<1){//현재 페이지
		pageno = 1;
	}
	int total_record = sdao.getitemCount();		   //총 레코드 수
	int page_per_record_cnt = 10;  //페이지 당 레코드 수
	int group_per_page_cnt =5;     //페이지 당 보여줄 번호 수[1],[2],[3],[4],[5]
//					  									  [6],[7],[8],[9],[10]											

	int record_end_no = pageno*page_per_record_cnt;				
	int record_start_no = record_end_no-(page_per_record_cnt-1);
	if(record_end_no>total_record){
		record_end_no = total_record;
	}
										   
										   
	int total_page = total_record / page_per_record_cnt + (total_record % page_per_record_cnt>0 ? 1 : 0);
	if(pageno>total_page){
		pageno = total_page;
	}


	

// 	현재 페이지(정수) / 한페이지 당 보여줄 페지 번호 수(정수) + (그룹 번호는 현제 페이지(정수) % 한페이지 당 보여줄 페지 번호 수(정수)>0 ? 1 : 0)
	int group_no = pageno/group_per_page_cnt+( pageno%group_per_page_cnt>0 ? 1:0);
//		현재 그룹번호 = 현재페이지 / 페이지당 보여줄 번호수 (현재 페이지 % 페이지당 보여줄 번호 수 >0 ? 1:0)	
//	ex) 	14		=	13(몫)		=	 (66 / 5)		1	(1(나머지) =66 % 5)			  
	
	int page_eno = group_no*group_per_page_cnt;		
//		현재 그룹 끝 번호 = 현재 그룹번호 * 페이지당 보여줄 번호 
//	ex) 	70		=	14	*	5
	int page_sno = page_eno-(group_per_page_cnt-1);	
// 		현재 그룹 시작 번호 = 현재 그룹 끝 번호 - (페이지당 보여줄 번호 수 -1)
//	ex) 	66	=	70 - 	4 (5 -1)
	
	if(page_eno>total_page){
//	   현재 그룹 끝 번호가 전체페이지 수 보다 클 경우		
		page_eno=total_page;
//	   현재 그룹 끝 번호와 = 전체페이지 수를 같게
	}
	
	int prev_pageno = page_sno-group_per_page_cnt;  // <<  *[이전]* [21],[22],[23]... [30] [다음]  >>
//		이전 페이지 번호	= 현재 그룹 시작 번호 - 페이지당 보여줄 번호수	
//	ex)		46		=	51 - 5				
	int next_pageno = page_sno+group_per_page_cnt;	// <<  [이전] [21],[22],[23]... [30] *[다음]*  >>
//		다음 페이지 번호 = 현재 그룹 시작 번호 + 페이지당 보여줄 번호수
//	ex)		56		=	51 - 5
	if(prev_pageno<1){
//		이전 페이지 번호가 1보다 작을 경우		
		prev_pageno=1;
//		이전 페이지를 1로
	}
	if(next_pageno>total_page){
//		다음 페이지보다 전체페이지 수보가 클경우		
		next_pageno=total_page/group_per_page_cnt*group_per_page_cnt+1;
//		next_pageno=total_page
//		다음 페이지 = 전체페이지수 / 페이지당 보여줄 번호수 * 페이지당 보여줄 번호수 + 1 
//	ex)			   = 	76 / 5 * 5 + 1	???????? 		
	}
	
	// [1][2][3].[10]
	// [11][12]
			
		int pageArray[] = {prev_pageno,page_sno,page_eno,next_pageno,total_page}; 	
			
		return pageArray;	
}
%>