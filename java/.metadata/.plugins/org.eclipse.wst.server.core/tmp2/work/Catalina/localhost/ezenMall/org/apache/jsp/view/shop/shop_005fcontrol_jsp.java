/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.34
 * Generated at: 2018-10-31 01:05:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view.shop;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import ezenMall.*;

public final class shop_005fcontrol_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1539927709679L));
    _jspx_dependants.put("jar:file:/D:/Work%20Space/java/.metadata/.plugins/org.eclipse.wst.server.core/tmp2/wtpwebapps/ezenMall/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1090214156000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("ezenMall");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");

	request.setCharacterEncoding("utf-8");

      out.write("\r\n");
      out.write("\r\n");
      ezenMall.ProductDO pdo = null;
      pdo = (ezenMall.ProductDO) _jspx_page_context.getAttribute("pdo", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (pdo == null){
        pdo = new ezenMall.ProductDO();
        _jspx_page_context.setAttribute("pdo", pdo, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      ezenMall.SaleDAO sdao = null;
      sdao = (ezenMall.SaleDAO) _jspx_page_context.getAttribute("sdao", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (sdao == null){
        sdao = new ezenMall.SaleDAO();
        _jspx_page_context.setAttribute("sdao", sdao, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("sdao"), request);
      out.write("\r\n");
      out.write("\r\n");
      ezenMall.MemberDAO memdao = null;
      memdao = (ezenMall.MemberDAO) _jspx_page_context.getAttribute("memdao", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (memdao == null){
        memdao = new ezenMall.MemberDAO();
        _jspx_page_context.setAttribute("memdao", memdao, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      ezenMall.MemberDO memdo = null;
      memdo = (ezenMall.MemberDO) _jspx_page_context.getAttribute("memdo", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (memdo == null){
        memdo = new ezenMall.MemberDO();
        _jspx_page_context.setAttribute("memdo", memdo, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("memdo"), request);
      out.write("\r\n");
      out.write("\r\n");
      ezenMall.OrderDO odo = null;
      odo = (ezenMall.OrderDO) _jspx_page_context.getAttribute("odo", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (odo == null){
        odo = new ezenMall.OrderDO();
        _jspx_page_context.setAttribute("odo", odo, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("odo"), request);
      out.write("\r\n");
      out.write("\r\n");

	String action = request.getParameter("action");

	switch (action) {

	case "detail":
		int cid5 = Integer.valueOf(request.getParameter("cid"));
		request.setAttribute("cid", cid5);
		int pid = Integer.valueOf(request.getParameter("pid"));
		ProductDO item = sdao.getItem(pid);
		request.setAttribute("item", item);

		pageContext.forward("../shop/product_detail.jsp");

		break;

	case "getall":
		ArrayList<ProductDO> plist = sdao.getItemList();
		request.setAttribute("plist", plist);

		pageContext.forward("../shop/shop_main.jsp");

		break;

	case "userlist":
		ArrayList<MemberDO> clist = memdao.getCustomerList();
		request.setAttribute("clist", clist);

		pageContext.forward("../shop/user_list.jsp");
		break;

	case "orderlist":
		int lcode = Integer.valueOf(request.getParameter("listcode"));
		request.setAttribute("lcode", lcode);

		pageContext.forward("../shop/order_list.jsp");
		break;

	case "cart":
		int cid = Integer.valueOf(request.getParameter("cid"));
		sdao.orderMake(cid);

		int pid2 = Integer.valueOf(request.getParameter("pid"));
		int quantity = Integer.valueOf(request.getParameter("q"));

		ProductDO cartI = new ProductDO();

		cartI.setpId(pid2);
		cartI.setpQuantity(quantity);

		sdao.inCart(cartI);

		pageContext.forward("../shop/shop_control.jsp?action=getall");
		break;

	case "cartList":
		if (request.getParameter("cid").equals("")) {
			out.println("<script>alert('로그인 해주세요!');history.go(-1);</script>");
		} else {
			int cid2 = Integer.valueOf(request.getParameter("cid"));
			ArrayList<OrderDO> cartList = sdao.CartList(cid2);
			request.setAttribute("cartList", cartList);

			pageContext.forward("../shop/cart.jsp");
		}
		break;

	case "delete":

		String o = request.getParameter("oid");
		String[] temp = o.split(",");

		int[] oid_list = new int[temp.length];
		int i = 0;

		while (i < temp.length) {
			oid_list[i] = Integer.valueOf(temp[i]);
			i++;
		}

		for (int val_oid : oid_list) {
			sdao.deleteCart(val_oid);
		}
		/* out.println("<script>alert('삭제되었습니다.')</script>");
		pageContext.forward("shop_control.jsp?action=cartList"); */
		out.println("<script>alert('삭제되었습니다.');"
				+ " document.location.href = 'shop/shop_control.jsp?action=cartList' </script>");
		break;

	case "selOrder":
		String o2 = request.getParameter("oid");
		String[] temp2 = o2.split(",");

		int[] oid_list2 = new int[temp2.length];
		int j = 0;

		while (j < temp2.length) {
			oid_list2[j] = Integer.valueOf(temp2[j]);
			j++;
		}

		for (int val_oid : oid_list2) {
			sdao.update(val_oid, oid_list2[0]);
		}

		for (int val_oid : oid_list2) {
			sdao.updatePrice(val_oid);
		}
		sdao.arrageOrder();
		pageContext.forward("../shop/shop_control.jsp?action=getall");

		break;

	case "orderHis":
		if (request.getParameter("cid").equals("")) {
			out.println("<script>alert('로그인 해주세요!');history.go(-1);</script>");
		} else {
			int cid3 = Integer.valueOf(request.getParameter("cid"));
			ArrayList<OrderDO> order = sdao.OrderHistory(cid3);
			request.setAttribute("order", order);

			pageContext.forward("order.jsp");
		}
		break;

	case "orderdetail":
		int oid = Integer.valueOf(request.getParameter("oid"));
		ArrayList<OrderDO> orderDetail = sdao.OrderDetail(oid);
		request.setAttribute("orderDetail", orderDetail);

		pageContext.forward("../shop/order_detail.jsp");
		break;

	case "order":
		int cid4 = Integer.valueOf(request.getParameter("cid"));
		sdao.orderMake(cid4);

		int pid3 = Integer.valueOf(request.getParameter("pid"));
		int quantity2 = Integer.valueOf(request.getParameter("q"));

		ProductDO orderI = new ProductDO();

		orderI.setpId(pid3);
		orderI.setpQuantity(quantity2);
		sdao.inCart(orderI);

		int orderNo = sdao.getOrderNm();

		sdao.update(orderNo, orderNo);
		sdao.updatePrice(orderNo);

		pageContext.forward("../shop/shop_control.jsp?action=orderHis");
		break;

	default:
		out.println("<script>alert('Check action parameter!!!')</script>");
		break;
	}

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
